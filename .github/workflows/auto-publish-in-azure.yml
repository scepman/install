
name: Auto-publish Artifacts in Azure

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches:
      - master
    paths:
      - 'dist*/*Artifacts*.zip'

jobs:
  find-publicationdir-and-channel:
    runs-on: ubuntu-latest
    outputs:
      channel: ${{ steps.regexparsing.outputs.channel }}
      publicationdirectory: ${{ steps.regexparsing.outputs.publicationdirectory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Shallow clone to have the commit history for the diff
      - id: regexparsing
        run: |
          echo "Sha=$GITHUB_SHA"
          diff=$(git diff --name-only --diff-filter=AM ${GITHUB_SHA}^..${GITHUB_SHA} | tr '\n' ' ')
          echo "test-x"
          echo "diff=$diff"
          [[ $diff =~ ([a-z-]+)\/[a-zA-Z-]*Artifacts-?([a-zA-Z]*)\.zip ]]
          echo "test-0"
          echo "test - publicationdirectory=${BASH_REMATCH[1]}"
          echo "publicationdirectory=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          if [ "${BASH_REMATCH[2]}" == "" ]; then
            echo "test-1"
            echo "channel=prod" >> $GITHUB_OUTPUT
          else
            echo "test-2"
            echo "channel=${BASH_REMATCH[2]}" | tr 'A-Z' 'a-z' >> $GITHUB_OUTPUT
          fi
          echo "test 3"

  release-in-azure:
    environment: AzureC4A8
    runs-on: ubuntu-latest
    needs: find-publicationdir-and-channel
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Find file name of Artifact to Publish
        uses: bb-froggy/variable-mapper@master
        with:
          key: "${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory }}-${{ needs.find-publicationdir-and-channel.outputs.channel }}"
          map: |
            {
              "dist-prod": {
                "publicationfile": "Artifacts.zip"
              },
              "dist-beta": {
                "publicationfile": "Artifacts-Beta.zip"
              },
              "dist-intern(al)?": {
                "publicationfile": "Artifacts-Intern.zip"
              },
              "dist-certmaster-prod": {
                "publicationfile": "CertMaster-Artifacts.zip"
              },
              "dist-certmaster-beta": {
                "publicationfile": "CertMaster-Artifacts-Beta.zip"
              },
              "dist-certmaster-intern(al)?": {
                "publicationfile": "CertMaster-Artifacts-Intern.zip"
              }
            }

      - name: Print what we have found so far (Debug)
        run: |
          echo "Selected directory ${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory }} in channel ${{ needs.find-publicationdir-and-channel.outputs.channel }}"
          echo "File to publish is ${{ env.publicationfile }}"

      - name: Check Input
        if: ${{ env.publicationfile == '' }}
        run: exit 1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      - name: Copy file to Blob Storage
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az storage blob upload --auth-mode login --overwrite -f ${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory }}/${{ env.publicationfile }} --account-name scepmanartifactsinstall --container-name ${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory }} --name ${{ env.publicationfile }}

      - name: Azure CLI logout
        run: |
          az logout
          az cache purge
          az account clear

  trigger-scepman-webhook:
    if: ${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory == 'dist' }}
    runs-on: ubuntu-latest
    needs: find-publicationdir-and-channel
    steps:
      - name: Set target reference
        uses: bb-froggy/variable-mapper@master
        with:
          key: "${{ needs.find-publicationdir-and-channel.outputs.channel }}"
          map: |
            {
              "prod": {
                "targetref": "release-channel"
              },
              "beta": {
                "targetref": "beta-channel"
              },
              "intern(al)?": {
                "targetref": "internal-channel"
              }
            }

      - name: Trigger Webhook
        run: curl -X POST -d "" "${{ secrets.WEBHOOK_URL_SCEPMAN }}&ref=${{ env.targetref }}"

  trigger-certmaster-webhook:
    if: ${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory == 'dist-certmaster' }}
    runs-on: ubuntu-latest
    needs: find-publicationdir-and-channel
    steps:
      - name: Set target reference
        uses: bb-froggy/variable-mapper@master
        with:
          key: "${{ needs.find-publicationdir-and-channel.outputs.channel }}"
          map: |
            {
              "prod": {
                "targetref": "release-channel"
              },
              "beta": {
                "targetref": "beta-channel"
              },
              "intern(al)?": {
                "targetref": "internal-channel"
              }
            }

      - name: Trigger Webhook
        run: curl -X POST -d "" "${{ secrets.WEBHOOK_URL_CERTMASTER }}&ref=${{ env.targetref }}"


